name: Build and Package

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Run build in Debian 12 container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace debian:12-slim bash -c \
          "mkdir -p /workspace/output && sed -i 's/sudo //g' /workspace/build.sh && chmod +x /workspace/build.sh && /workspace/build.sh && rm -rf /workspace/output/*-dbgsym*"

      - name: Collect build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            /home/runner/work/ta-lib-debian/ta-lib-debian/output/*

      - name: Determine the release title
        id: release_title
        run: |
          FIRST_DEB=$(ls /home/runner/work/ta-lib-debian/ta-lib-debian/output/*.deb | sort | head -n 1)
          FIRST_DEB_NAME=$(basename $FIRST_DEB)
          echo "RELEASE_TITLE=${FIRST_DEB_NAME%.*}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: comnoco/create-release-action@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TITLE }}
          release_name: ${{ env.RELEASE_TITLE }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: AButler/upload-release-assets@v3.0
        with:
          files: /home/runner/work/ta-lib-debian/ta-lib-debian/output/*.deb
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ env.RELEASE_TITLE }}
